package org.gnori.client.telegram.utils.preparers;

import java.util.List;
import org.gnori.data.dto.AccountDto;
import org.gnori.data.dto.MailingHistoryDto;
import org.gnori.data.model.Message;

/**
 * Utils for preparing text
 */
public class TextPreparer {
    public static String prepareTextForBeginningMessage() {
        return "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –ø—É–Ω–∫—Çüëáüèø";
    }
    public static String prepareTextForSendCurrentAndAnonymouslyMessage() {
        return "‚úî–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å\n"+prepareTextForBeginningMessage();
    }
    public static String prepareTextForChangeItemMessage() {
        return "*–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç, –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è:*";
    }
    public static String prepareSuccessTextForChangingLastMessage() {
        return "‚úî–£—Å–ø–µ—à–Ω–æ";
    }
    public static String prepareTextForLastForUnknownMessage() {
        return "–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞üëÄ\n" +
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏üëå";
    }
    public static String prepareTextForRegistrationMessage() {
        return "*–ö–ª–∏–∫–Ω–∏—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–µ, –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã*";
    }
    public static String prepareTextForWaitingForConcreteSendingMessage() {
        return "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ –æ—á–µ—Ä–µ–¥—å...üõ´";
    }
    public static String prepareTextForBeforeDownloadMessage() {
        return "*–ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø–∏—Å—å–º–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ .txt"
            + "\n –®–∞–±–ª–æ–Ω: *"+
              "\n\n ###                  –ó–∞–≥–æ–ª–æ–≤–æ–∫                  ###"+
                "\n ///                 –¢–µ–∫—Å—Ç –ø–∏—Å—å–º–∞                ///"+
                "\n ===          –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∏—Å–µ–º –∫–∞–∂–¥–æ–º—É           ==="+
                "\n :::            –ü–æ–ª—É—á–∞—Ç–µ–ª–∏ —á–µ—Ä–µ–∑ \",\"           :::"+
                "\n ---–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ yyyy-MM-dd HH:mm:ss)---"+
              "\n\n‚ùï –ü—Ä–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–º –≤–≤–æ–¥–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—Ç –ø—Ä–æ–ø—É—â–µ–Ω—ã";
    }
    public static String prepareTextForAfterSuccessDownloadMessage() {
        return prepareSuccessTextForChangingLastMessage();
    }

    public static String prepareTextForAfterBadDownloadMessage() {
        return "‚ùå–ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ .txt";
    }
    public static String prepareTextForBeforeChangeTitleMessage() {
        return "*–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫: *";
    }
    public static String prepareTextForBeforeChangeSentDateMessage() {
        return "*–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –¥–∞—Ç—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ –ú–°–ö (–≤ —Ñ–æ—Ä–º–∞—Ç–µ yyyy-MM-dd HH:mm:ss)*";
    }
    public static String prepareTextInvalidDateForAfterChangeSentDateMessage(){
        return "‚ùå–í—ã –≤–≤–µ–ª–∏ –¥–∞—Ç—É –≤ –Ω–µ–≤–µ—Ä–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞";
    }
    public static String prepareTextForBeforeChangeRecipientsMessage() {
        return "*–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã—Ö –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π : *";
    }
    public static String prepareTextForBeforeChangeMailMessage() {
        return "*–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π mail: *";
    }
    public static String prepareTextForAfterMailIsExistChangeMailMessage() {
        return "‚ùå–¢–∞–∫–æ–π mail —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞";
    }

    public static String prepareTextForAfterInvalidMailChangeMailMessage() {
        return "‚ùå–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π mail, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞";
    }
    public static String prepareTextForBeforeChangeKeyForMailMessage() {
        return "*–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫–ª—é—á –¥–ª—è mail: *";
    }
    public static String prepareTextForAfterEmptyKeyChangeKeyForMailMessage() {
        return "‚ùå–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –∫–ª—é—á, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞";
    }
    public static String prepareTextForBeforeChangeCountForRecipientsMessage() {
        return  "*–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –∫–∞–∂–¥–æ–º—É –ø–æ–ª—É—á–∞—Ç–µ–ª—é: *";
    }
    public static String prepareTextForAfterNotNumberChangeCountForRecipientsMessage() {
        return  "‚ùå–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞";
    }
    public static String prepareTextForBeforeChangeContentMessage() {
        return "*–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç: *";
    }
    public static String prepareTextForBeforeChangeAnnexMessage() {
        return "*–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (—Ñ–æ—Ç–æ/—Ñ–∞–π–ª): *";
    }

    public static String prepareTextForSendMessage(AccountDto account) {
        var baseText = "*–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ—Ç–ø—Ä–∞–≤–∫–∏:*";
        if(!(account.getEmail()!=null && account.hasKey())){
            baseText += "\n–í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ—é –ø–æ—á—Ç—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏";
        }
        return baseText;
    }

    public static String prepareTextForProfileMessage(AccountDto account) {
        var email = account.getEmail()!=null ? account.getEmail() : "‚ùå";
        var keyPresent = account.hasKey()? "‚úî" : "‚ùå";

        return String.format("*–ê–∫–∫–∞—É–Ω—Ç:*\n" +
                "–ø–æ—á—Ç–∞: %s\n" +
                "–∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–æ—á—Ç–µ: %s",email,keyPresent);
    }
    public static String prepareTextForPreviewMessage(Message message){

        var messageText = message.getText().trim();
        var lengthTextConstraint = messageText.length() > 100;
        var textForResult = lengthTextConstraint ? messageText.substring(0,75) : messageText;
        var suffixResultText = (lengthTextConstraint || messageText.isEmpty())? "...": "";
        var messageTitle= message.getTitle().trim();
        var titleForResult = messageTitle.equals("") ? "–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞" : messageTitle;
        return "*Preview:*" +
                "\n" +
                "\n*"+titleForResult+"*" +
                "\n "+textForResult+suffixResultText +
                "\n –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: "+(message.hasAnnex()? "‚úî" : "‚ùå")+
                "\n –ü–æ–ª—É—á–∞—Ç–µ–ª–∏: "+ recipientsToString(message.getRecipients())+
                "\n –®—Ç. –∫–∞–∂–¥–æ–º—É: "+ message.getCountForRecipient()+
                "\n –î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: "+(message.hasSentDate()? message.getSentDate():"—Ç–µ–∫—É—â–∞—è");
    }

    public static String prepareTextForMessage(MailingHistoryDto mailingHistory) {
        StringBuilder text = new StringBuilder("*–ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—Å—ã–ª–æ–∫: *");
        if(mailingHistory!=null) {
            if(mailingHistory.getStateLastMessage()!=null){
                text.append("\n–°—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ä–∞—Å—Å—ã–ª–∫–∏: ").append(mailingHistory.getStateLastMessage().toString());
            }
            var countLine = 0;
            for(var record : mailingHistory.getMailingList()){
                var line = ++countLine+") "+convertDate(record.getSendDate()) + " | " +record.getCountMessages().toString()+ " —à—Ç.";
                text.append("\n").append(line);
            }
            return text.toString();
        }else {
            return text + "\n–í—ã –Ω–µ —Å–æ–∑–¥–∞–≤–∞–ª–∏ —Ä–∞—Å—Å—ã–ª–æ–∫!";
        }
    }
    public static String prepareTextForHelpMessage(){
        return "*–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é –ø–æ—á—Ç—É*";
    }

    private static String recipientsToString(List<String> recipients) {
        var resultText = " ";
        var count = 3;
        if(!recipients.isEmpty()) {
            StringBuilder rawText = new StringBuilder();
            recipients.stream().limit(count).forEach(recipient->rawText.append(recipient).append(", "));

            var countRemain = recipients.size() - count;
            var tailForText = countRemain > 0 ? "... –∏ –µ—â–µ "+countRemain : "";
            resultText = (rawText.substring(0,rawText.length()-2))+tailForText;

        }
        return resultText;
    }
    private static String convertDate(String date){
        var pointIndex = date.indexOf(".");
        return date.replace("T"," ").substring(0,pointIndex-3).toLowerCase() + " UTC+3";
    }

}
